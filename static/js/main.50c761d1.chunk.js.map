{"version":3,"sources":["components/Header.js","components/Main/AnimeQuote.js","components/Main/Search.js","components/Main/QuoteBtn.js","components/Main/Main.js","components/Footer.js","App.js","index.js"],"names":["Header","className","AnimeQuote","randomQuote","quoteLoading","anime","character","quote","Search","props","state","animeName","type","placeholder","onBlur","event","setAnimeName","target","value","this","children","React","Component","QuoteBtn","reqFunction","onClick","Main","loading","userQuote","setRandomAnimeQuote","bind","setUserAnimeQuote","URL_RANDOM_ANIME_QUOTE","URL_ANIME_QUOTE_BY_NAME","setState","a","fetch","data","json","dataObj","nameAnime","reqStrName","split","join","console","log","name","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50c761d1.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../scss/header.scss';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"header__title\">Random Anime Quotes</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../../scss/animeQuote.scss';\r\n\r\nfunction AnimeQuote({ randomQuote, quoteLoading }) {\r\n  return (\r\n    <article className={`anime-quote ${quoteLoading ? '' : 'loading'}`}>\r\n      <h2 className=\"anime-quote__title\">\r\n        {randomQuote ? randomQuote.anime : 'Nothing =('}\r\n      </h2>\r\n      <p className=\"anime-quote__character\">\r\n        {randomQuote ? randomQuote.character : '...'}\r\n      </p>\r\n      <p className=\"anime-quote__description\">\r\n        {randomQuote ? randomQuote.quote : '...'}\r\n      </p>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default AnimeQuote;\r\n","import React from 'react';\r\nimport '../../scss/search.scss';\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      animeName: '',\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search\">\r\n        <input\r\n          className=\"search__input\"\r\n          type=\"text\"\r\n          placeholder=\"Anime name\"\r\n          onBlur={(event) => {\r\n            this.props.setAnimeName(event.target.value);\r\n          }}\r\n        ></input>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport '../../scss/quoteBtn.scss';\r\n\r\nfunction QuoteBtn({ animeName, reqFunction, children, quoteLoading }) {\r\n  return (\r\n    <button\r\n      className={`quote-btn ${quoteLoading ? '' : 'loading'}`}\r\n      onClick={() => {\r\n        animeName ? reqFunction(animeName) : reqFunction();\r\n      }}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default QuoteBtn;\r\n","import React from 'react';\r\nimport '../../scss/main.scss';\r\nimport AnimeQuote from './AnimeQuote';\r\nimport Search from './Search';\r\nimport QuoteBtn from './QuoteBtn';\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      animeName: '',\r\n      randomQuote: {\r\n        anime: 'Anime',\r\n        character: 'Character',\r\n        quote: 'Quote',\r\n      },\r\n      userQuote: {\r\n        anime: 'Anime',\r\n        character: 'Character',\r\n        quote: 'Quote',\r\n      },\r\n    };\r\n    this.setRandomAnimeQuote = this.setRandomAnimeQuote.bind(this);\r\n    this.setUserAnimeQuote = this.setUserAnimeQuote.bind(this);\r\n    this.setAnimeName = this.setAnimeName.bind(this);\r\n    this.URL_RANDOM_ANIME_QUOTE = 'https://animechanapi.xyz/api/quotes/random';\r\n    this.URL_ANIME_QUOTE_BY_NAME = 'https://animechanapi.xyz/api/quotes?anime=';\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setRandomAnimeQuote();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"main\">\r\n        <section className=\"intro\">\r\n          <div className=\"intro__container\">\r\n            <h2 className=\"intro__title\">Ð¡lick to generate random quote</h2>\r\n            <div className=\"intro__quote-wrapper\">\r\n              <AnimeQuote\r\n                randomQuote={this.state.randomQuote}\r\n                quoteLoading={this.state.loading}\r\n              />\r\n            </div>\r\n            <QuoteBtn\r\n              reqFunction={this.setRandomAnimeQuote}\r\n              quoteLoading={this.state.loading}\r\n            >\r\n              Random\r\n            </QuoteBtn>\r\n          </div>\r\n          <div className=\"intro__container\">\r\n            <h2 className=\"intro__title\">\r\n              Try to search quotes from your anime\r\n            </h2>\r\n            <AnimeQuote\r\n              randomQuote={this.state.userQuote}\r\n              quoteLoading={this.state.loading}\r\n            />\r\n            <Search\r\n              setAnimeName={this.setAnimeName}\r\n              quoteLoading={this.state.loading}\r\n            >\r\n              <QuoteBtn\r\n                animeName={this.state.animeName}\r\n                reqFunction={this.setUserAnimeQuote}\r\n                quoteLoading={this.state.loading}\r\n              >\r\n                Search\r\n              </QuoteBtn>\r\n            </Search>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  setRandomAnimeQuote() {\r\n    this.setState({\r\n      loading: false,\r\n    });\r\n\r\n    (async () => {\r\n      const data = await fetch(this.URL_RANDOM_ANIME_QUOTE);\r\n      const dataObj = await data.json();\r\n      const quote = dataObj.data[0];\r\n\r\n      this.setState({\r\n        randomQuote: quote,\r\n        loading: true,\r\n      });\r\n    })();\r\n  }\r\n\r\n  setUserAnimeQuote(nameAnime) {\r\n    this.setState({\r\n      loading: false,\r\n    });\r\n\r\n    const reqStrName = nameAnime.split(' ').join('');\r\n\r\n    (async () => {\r\n      const data = await fetch(this.URL_ANIME_QUOTE_BY_NAME + reqStrName);\r\n      const dataObj = await data.json();\r\n      const quote = dataObj.data[0];\r\n      console.log(quote);\r\n\r\n      if (quote) {\r\n        this.setState({\r\n          userQuote: quote,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          userQuote: null,\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        loading: true,\r\n        animeName: '',\r\n      });\r\n    })();\r\n  }\r\n\r\n  setAnimeName(name) {\r\n    this.setState({\r\n      animeName: name,\r\n    });\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport '../scss/footer.scss';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport 'normalize.css';\nimport './scss/app.scss';\n\nimport Header from './components/Header';\nimport Main from './components/Main/Main';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}